(defun dired-open-file ()
  "Open the file at point in dired with the appropriate system application."
  (interactive)
  (let ((file (dired-get-file-for-visit))
        (open-cmd (pcase system-type
                    ('darwin "open")
                    ('gnu/linux "xdg-open")
                    (_ "xdg-open"))))
    (message "Opening %s..." file)
    (call-process open-cmd nil 0 nil file)))

(defun my-dropbox-exclude-directory ()
  (interactive)
  (if (not (string-equal system-type "gnu/linux"))
      (message "Sorry, this function only works on Linux.")
    (if (not (file-exists-p "/usr/bin/dropbox-cli"))
        (message "dropbox-cli does not exist in /usr/bin/.")
      (let ((directories (dired-get-marked-files)))
        (dolist (directory directories)
          (if (not (string-match "Dropbox" directory))
              (message "Directory %s is not in Dropbox." directory)
            (let ((command (concat "dropbox-cli exclude add " directory)))
              (message "Running command: %s" command)
              (shell-command command)
              (when (get-buffer "*Dropbox Exclude List*")
                (with-current-buffer "*Dropbox Exclude List*"
                  (let ((buffer-read-only nil))
                    (erase-buffer)
                    (insert (shell-command-to-string "dropbox-cli exclude"))
                    (goto-char (point-min))
                    (setq buffer-read-only t)))))))))))

(defun my-dropbox-add-directory ()
  (interactive)
  (let* ((current-line (thing-at-point 'line t))
         (command (concat "dropbox-cli exclude remove " default-directory (string-trim current-line))))
    (message "Running command: %s" command)
    (shell-command command)
    (with-current-buffer "*Dropbox Exclude List*"
      (let ((buffer-read-only nil))
        (erase-buffer)
        (insert (shell-command-to-string "dropbox-cli exclude"))
        (goto-char (point-min)))
      (setq buffer-read-only t))))

(defun my-dropbox-exclude-list ()
  (interactive)
  (if (not (string-equal system-type "gnu/linux"))
      (message "Sorry, this function only works on Linux.")
    (if (not (file-exists-p "/usr/bin/dropbox-cli"))
        (message "dropbox-cli does not exist in /usr/bin/.")
      (if (not (string-match "Dropbox" default-directory))
          (message "Current directory is not in Dropbox.")
        (let* ((buffer-name "*Dropbox Exclude List*")
               (buffer (get-buffer-create buffer-name)))
          (split-window-right)
          (other-window 1)
          (switch-to-buffer buffer)
          (let ((buffer-read-only nil))
            (erase-buffer)
            (insert (shell-command-to-string "dropbox-cli exclude"))
            (goto-char (point-min))
            (setq buffer-read-only t))
          (dropbox-exclude-mode))))))

(provide 'dired-functions)
