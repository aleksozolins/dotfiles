# new prefix binding
unbind C-b
set -g prefix C-s
bind-key -r C-s send-prefix

# key to reload config on the fly
bind-key r source-file ~/.config/tmux/tmux.conf \; display-message "config reloaded!"

set-window-option -g mode-keys vi
set-option -g default-terminal "screen-256color"
set-option -g status-keys "emacs"

# Use Ctrl-vim keys without prefix key to switch panes
# bind-key -n C-h select-pane -L
# bind-key -n C-j select-pane -D 
# bind-key -n C-k select-pane -U
# bind-key -n C-l select-pane -R

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# split windows
bind-key \\ split-window -h -c '#{pane_current_path}'
bind-key - split-window -v -c '#{pane_current_path}'

# resize windows
bind-key -n S-Left resize-pane -L 2
bind-key -n S-Right resize-pane -R 2
bind-key -n S-Down resize-pane -D 1
bind-key -n S-Up resize-pane -U 1
# not sure why this second lot doesn't work
bind-key -n C-Left resize-pane -L 10
bind-key -n C-Right resize-pane -R 10
bind-key -n C-Down resize-pane -D 5
bind-key -n C-Up resize-pane -U 5

# new window at current path
bind-key c new-window -c '#{pane_current_path}'

# start window at 1 instead of 0 and additional options
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on # not sure about this one if I like it

# send pane to a new window detached (break)
bind-key b break-pane -d

# status bar
set-option -g status-position top
set-option -g status-bg '#666666'
set-option -g status-fg '#aaaaaa'
set-option -g status-left-length 50
set-option -g status-right " #(date '+%a %Y-%m-%d% %H:%M') "

# Display the battery percentage (Mac OS)
set -ag status-right "#[fg=default,bg=default] #(pmset -g batt | tail -1 | awk '{print $3}' | tr -d ';') #[default]"

# choose the session
# bind-key C-j choose-tree

# Fuzzy matching session navigation via fzf utility (brew install fzf)
bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# Use vim keybindings in copy mode
setw -g mode-keys vi
# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# Prompted join-pane
bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Easily swap a pane (targeted by pane number) with the current pane
bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# Always stay in Tmux
bind-key C-b send-keys 'tat && exit' 'C-m'
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

# taskwarrior input
unbind t
bind-key t command-prompt -p "task:"  "run-shell 'task add ''%%'"
